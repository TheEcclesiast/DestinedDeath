from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command


from database import Posts
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


def kb_hashtags():
    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text='–ü–æ–¥–∞—Ä–∫–∏')
    keyboard.button(text='–ó–¥–æ—Ä–æ–≤—å–µ')
    keyboard.button(text='–°–ø–æ—Ä—Ç')
    keyboard.button(text='–ñ–∏–≤–æ—Ç–Ω—ã–µ')
    keyboard.button(text='–î–æ–º –∏ —Å–∞–¥')
    keyboard.button(text='–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞')
    keyboard.button(text='–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è')
    keyboard.button(text='–î–µ—Ç—è–º')
    keyboard.button(text='–ú—É–∂—á–∏–Ω–∞–º')
    keyboard.button(text='–ñ–µ–Ω—â–∏–Ω–∞–º')
    keyboard.adjust(2, 2, 2, 2, 2, 2, 2, 2)
    return keyboard.as_markup(resize_keyboard=True)


def kb_service():
    kb_service = InlineKeyboardBuilder()
    kb_service.button(text='–ü—Ä–∞–≤–∏–ª–∞ –°–µ—Ä–≤–∏—Å–∞', callback_data='rules')
    kb_service.adjust(1)
    return kb_service


def kb_cancel():
    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text='–û—Ç–º–µ–Ω–∞')
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=True)


def kb_continue():
    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å')
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=True)


def kb_cancel_or_accept():
    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text='–û—Ç–º–µ–Ω–∞')
    keyboard.button(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ')
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=True)


def kb_start():
    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ–∫–∞–º')
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=True)


def kb_pay():
    keyboard = ReplyKeyboardBuilder()
    keyboard.button(text='–û–ø–ª–∞—Ç–∏—Ç—å')
    return keyboard.as_markup(resize_keyboard=True, one_time_keyboard=True)


class Post(StatesGroup):
    Hashtag = State()
    name = State()
    Description = State()
    link = State()
    photo_id = State()
    id = State()
    chat_id = State()
    payment = State()
    confirmation = State()


cancel_fsm_router = Router()
FoeTracer = Router()






@cancel_fsm_router.message(F.text.casefold() == '–û—Ç–º–µ–Ω–∞' or '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' or '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ–∫–∞–º')
async def cancel(message: Message, state: FSMContext):
    await state.clear()
    await state.set_state(Post.Hashtag)
    if message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏—Å—Ç–æ–∫–∞–º':
        await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –∏—Å—Ç–æ–∫–∞–º. –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–æ—Å—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –æ—á–µ—Ä–µ–¥–Ω–æ–π...', reply_markup=kb_start())
    elif message.text == '–û—Ç–º–µ–Ω–∞':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=kb_hashtags())


@FoeTracer.message(Command('start'))
async def hashtag(message: Message, state: FSMContext):
    await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –ê–≤–∞–Ω–≥–∞—Ä–¥–µ. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ... –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –∫–æ–µ-—á—Ç–æ —Ä–∞—Å—Å–∫–∞–∂–µ–º...', reply_markup=kb_continue())
    await message.answer('–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –≤—ã –µ—â—ë –∏—Ö –Ω–µ —á–∏—Ç–∞–ª–∏', reply_markup=kb_service().as_markup())
    await state.set_state(Post.Hashtag)


@FoeTracer.callback_query(F.data == 'rules')
async def handle_callback_query(callback: CallbackQuery, state: FSMContext, bot: Bot):
    if callback.data == 'rules':
        await bot.send_message(chat_id=callback.from_user.id, text="""
        –í –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ –Ω–µ–ª—å–∑—è –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø–æ—Å—Ç—ã 18+, —Å–ø–∞–º–∏—Ç—å –ø–æ—Å—Ç—ã –±–µ–∑ –æ–ø–ª–∞—Ç—ã, –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, .
        –û—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –ª–µ–∂–∞—Ç –≤ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω –º–µ–∂–¥—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º.
        –ï—Å–ª–∏ –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞ –Ω–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 48 —á–∞—Å–æ–≤, –∑–Ω–∞—á–∏—Ç –æ–Ω –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –∏ –≤—ã –Ω–∞—Ä—É—à–∏–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        –ü–æ—Å—Ç—ã –≤—ã–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤, –∑–∞ —Ä–µ–¥–∫–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏. –í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞..
        """, reply_markup=kb_continue())
        await state.set_state(Post.Hashtag)
        await callback.answer()


@FoeTracer.message(Post.Hashtag)
async def name(message: Message, state: FSMContext):
    ms = message.text
    if ms in ['–ü–æ–¥–∞—Ä–∫–∏', '–ó–¥–æ—Ä–æ–≤—å–µ', '–°–ø–æ—Ä—Ç', '–ñ–∏–≤–æ—Ç–Ω—ã–µ', '–î–æ–º –∏ —Å–∞–¥', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è', '–î–µ—Ç—è–º', '–ú—É–∂—á–∏–Ω–∞–º', '–ñ–µ–Ω—â–∏–Ω–∞–º']:
        await state.update_data(hashtag="#" + message.text)
        await state.update_data(id=message.from_user.id)
        await state.update_data(chat_id=message.chat.id)
        await message.answer('–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –≤–∞—à —Ç–æ–≤–∞—Ä?\n(–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ü–∏—Ñ—Ä–æ–π –±–µ–∑ –±—É–∫–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä 763 –∏–ª–∏ 1299)', reply_markup=kb_cancel())
        await state.set_state(Post.name)
    else:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π', reply_markup=kb_hashtags())
        await state.set_state(Post.Hashtag)


@FoeTracer.message(Post.name)
async def description(message: Message, state: FSMContext):
    await state.update_data(name=message.text + ' Rub.')
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞', reply_markup=kb_cancel())
    await state.set_state(Post.Description)


@FoeTracer.message(Post.Description)
async def link(message: Message, state: FSMContext):
    await state.update_data(Description=message.text)
    await message.answer('–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç...', reply_markup=kb_cancel())
    await state.set_state(Post.link)


@FoeTracer.message(Post.link)
async def photo(message: Message, state: FSMContext):
    await state.update_data(link=message.text)
    if not message.text.startswith('http://') and not message.text.startswith('https://'):
        await message.answer('–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://')
        return
    else:
        await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–∏—Ü–µ–≤–æ–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞...', reply_markup=kb_cancel())
        await state.set_state(Post.photo_id)


@FoeTracer.message(Post.photo_id)
async def process_photo(message: Message, state: FSMContext):
    if message.photo is None:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ')
        return
    else:
        await state.set_state(Post.id)
        await state.update_data(photo_id=message.photo[-1].file_id)
        our_data = await state.get_data()
        photo = message.photo[-1]
        await message.bot.send_photo(photo=photo.file_id,
                                     caption=f'–í–∞—à –ø–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{our_data["hashtag"]}\n{our_data["name"]}\n{our_data["Description"]}\n{our_data["link"]}',
                                     chat_id=message.from_user.id)
        await message.answer('–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ"', reply_markup=kb_cancel_or_accept())

        Posts.create(self=Posts(our_data))


@FoeTracer.message(Post.photo_id)
async def process_photo(message: Message, state: FSMContext):
    if message.photo is None:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ')
    else:
        await state.set_state(Post.id)
        await state.update_data(photo_id=message.photo[-1].file_id)
        our_data = await state.get_data()
        photo = message.photo[-1]
        await message.bot.send_photo(photo=photo.file_id,
                                     caption=f'–í–∞—à –ø–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{our_data["hashtag"]}\n{our_data["name"]}\n{our_data["Description"]}\n{our_data["link"]}',
                                     chat_id=message.from_user.id)
        await message.answer('–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ"', reply_markup=kb_cancel_or_accept())
        Posts.create(self=Posts(our_data))


@FoeTracer.message(Post.id)
async def payment_info(message: Message, state: FSMContext):
    await message.answer(
        "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É üëá\n"
        "–¢–∏–Ω—å–∫–æ—Ñ—Ñ üëë: 2200 7008 7844 6318\n"
        "–í–¢–ë üíé: 2200 2460 0612 8725\n\n"
        "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –Ω—É–∂–µ–Ω.\n\n"
        "‚ÄºÔ∏è –í–ê–ñ–ù–û: –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ —Å–¥–µ–ª–∞–π—Ç–µ –æ—Ç–≤–µ—Ç [Reply] –Ω–∞ –≠–¢–û –°–û–û–ë–©–ï–ù–ò–ï –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫ –Ω–µ–º—É —á–µ—Ä–µ–∑ üìé —Å–∫—Ä–∏–Ω—à–æ—Ç üßæ –ß–ï–ö–ê –æ–± –æ–ø–ª–∞—Ç–µ.\n\n"
        "–î–ª—è —ç—Ç–æ–≥–æ –≤—ã–±–µ—Ä–∏—Ç–µ: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ–∫.\n\n"
        "‚ÄºÔ∏è –ü–†–ò–°–´–õ–ê–ô–¢–ï –ò–ú–ï–ù–ù–û –ß–ï–ö, –°–ö–†–ò–ù –û –ü–ï–†–ï–í–û–î–ï –ù–ï –ü–û–î–¢–í–ï–†–ñ–î–ê–ï–¢ –ü–õ–ê–¢–ï–ñ\n\n"
        "–ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤–∞—Å –∂–¥—ë—Ç –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞. –ü—Ä–æ—Å–∏–º –≤–∞—Å –ø–æ–º–Ω–∏—Ç—å –æ –Ω–∞—à–∏—Ö –ø—Ä–∞–≤–∏–ª–∞—Ö.",
        reply_markup=kb_cancel()
    )
    await state.set_state(Post.confirmation)


@FoeTracer.message(Post.confirmation)
async def confirm_payment(message: Message, bot: Bot, state: FSMContext):
    if message.photo:
        our_data = await state.get_data()
        name = message.from_user.first_name
        username = message.from_user.username
        inline_keyboard = [
            [InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å", callback_data="accept"),
             InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="reject")]
        ]
        await bot.send_photo(photo=our_data["photo_id"],
                             caption=f'\n{our_data["hashtag"]}\n{our_data["name"]}\n{our_data["Description"]}\n{our_data["link"]}\n\n',
                             chat_id=-1002105581775, reply_markup=InlineKeyboardMarkup(inline_keyboard=inline_keyboard))
        await bot.send_photo(photo=message.photo[-1].file_id, caption=f'–ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {name}  @{username}', chat_id=-1002105581775)

        await state.set_state(Post.Hashtag)
        await message.answer('–í–∞—à –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –ï—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –æ–Ω –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤. –ü–æ–∫–∞ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞.', reply_markup=kb_start())
    else:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ.')


@FoeTracer.callback_query()
async def accept(callback: CallbackQuery, state: FSMContext, bot: Bot):
    our_data = await state.get_data()

    if callback.data == 'accept':
        await bot.forward_message(chat_id=-1002012902708, from_chat_id=-1002105581775, message_id=callback.message.message_id, disable_notification=True)
        await bot.delete_message(chat_id=-1002105581775, message_id=callback.message.message_id)
    elif callback.data == 'reject':
        await bot.forward_message(chat_id=-1002003559111, from_chat_id=-1002105581775, message_id=callback.message.message_id, disable_notification=True)
        await bot.delete_message(chat_id=-1002105581775, message_id=callback.message.message_id)

    await callback.answer()
    await state.clear()
